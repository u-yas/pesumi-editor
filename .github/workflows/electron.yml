name: Build/release

on:
  push:
    branches:
      - "ci"

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      # osごとに処理を分ける
      - name: Cache node_modules for ubuntu
        id: node_modules_cache_id_ubuntu
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache node-modules for Windows
        id: node_modules_cache_id_windows
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v2
          with:
            path: ~\AppData\Local\dub
            key: ${{ runner.os }}-dub-${{ hashFiles('**/dub.json') }}
            restore-keys: |
              ${{ runner.os }}-dub-
              
      - name: Install modules
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: npm --check-files --frozen-lockfile --non-interactive

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          draft: true
          release: true
